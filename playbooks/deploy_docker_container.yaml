---
- name: Install dependencies in servers
  hosts: docker_server
  vars_files:
    - "{{ project_path }}/vars/vars_dependencies.yml"
  tasks:
  - name: install system dependencies
    dnf:
      name: "{{ dnf_dependencies }}"
      state: latest
  - name: install python3 dependencies
    pip: 
      name: "{{ python3_dependencies }}"
      executable: pip3

- name: Validate if container is already running, otherwise deploy container and validate it was successfully deployed
  hosts: docker_server
  vars_files: 
    - "{{ project_path }}/vars/vars_pytest.yml"
    - "{{ project_path }}/vars/vars_tomcat_docker_container.yml"
  roles:
    - role: docker_container_test
      vars: 
        container_test_params: "{{ tomcat_container_test_params }}"
        script_test_name: "{{ tomcat_script_test_name }}"
    - role: docker_container_builder_deployer #poner opciones adicionales asi como logging, etc. 
      vars:
        dockerfile_name: "{{ tomcat_dockerfile_name }}"
        docker_image_args: "{{ tomcat_docker_image_args }}"
        container_name: "{{ tomcat_container_name }}"
        image_name: "{{ tomcat_container_image_name }}"
        image_tag: "{{ tomcat_container_image_tag }}"
        container_port: "{{ tomcat_container_port }}"
        host_map_port: "{{ tomcat_container_host_map_port }}"
      when: "pytest_execution.rc == 1" 
    - role: docker_container_test
      vars: 
        container_test_params: "{{ tomcat_container_test_params }}"
        script_test_name: "{{ tomcat_script_test_name }}"
      when: "pytest_execution.rc == 1" 
  post_tasks:
    - debug: 
        msg: "{% if pytest_execution.rc==0 %}Container is up and running{% elif pytest_execution.rc==1 %}Container is down{% else %}Test crashed, checkout the params, unable to validate if container is running{% endif %}"
      failed_when: "pytest_execution.rc!=0"
